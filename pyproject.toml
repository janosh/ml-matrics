[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pymatviz"
version = "0.6.2"
description = "A toolkit for visualizations in materials informatics"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
license = { file = "license" }
keywords = [
    "science",
    "materials informatics",
    "materials discovery",
    "chemistry",
    "data visualization",
    "plotly",
    "matplotlib",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: MIT License",
]
urls = { Homepage = "https://github.com/janosh/pymatviz" }
requires-python = ">=3.8"
dependencies = [
    "matplotlib >= 3.6.2",
    "numpy >= 1.21.0",
    "pandas",
    "plotly",
    "pymatgen",
    "scikit-learn",
    "scipy",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "kaleido"]
data-src = ["matminer"]
export-figs = ["kaleido"]
gh-pages = ["lazydocs", "jupyter", "nbconvert"]

[tool.setuptools.packages]
find = { include = ["pymatviz*"], exclude = ["tests*"] }

[tool.setuptools.package-data]
pymatviz = ["*.csv"]

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
no_implicit_optional = false

[tool.ruff]
target-version = "py38"
select = [
    "B",   # flake8-bugbear
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "PD",  # pandas-vet
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PYI", # flakes8-pyi
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # ruff
    "SIM", # flake8-simplify
    "TID", # tidy imports
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "B028",    # No explicit stacklevel keyword argument found
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D205",    # 1 blank line required between summary line and description
    "N806",    # non-lowercase-variable-in-function
    "PD901",   # pandas-df-variable-name
    "PLC0414", # useless-import-alias
    "PLC1901", # compare-to-empty-string
    "PLR",     # pylint refactor
    "PLW2901", # Outer for loop variable overwritten by inner assignment target
    "PT006",   # pytest-parametrize-names-wrong-type
    "PT011",   # pytest-raises-too-broad
    "PT013",   # pytest-incorrect-pytest-import
    "RUF001",  # ambiguous-unicode-character-string
    "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
    "SIM115",  # Use context handler for opening files
]
pydocstyle.convention = "google"
isort.lines-after-imports = 2
isort.split-on-trailing-comma = false

[tool.ruff.per-file-ignores]
"tests/*" = ["D103"]
"examples/*" = ["E402"] # E402 Module level import not at top of file
